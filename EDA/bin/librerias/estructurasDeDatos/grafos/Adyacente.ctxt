#BlueJ class context
comment0.params=v\ peso
comment0.target=Adyacente(int,\ double)
comment0.text=\ Crea\ el\ vertice\ v\ adyacente\ a\ otro\ de\ un\ grafo\ \ \r\n\ \ y\ el\ peso\ de\ la\ arista\ que\ los\ une.\r\n\ \ @param\ v,\ Vertice\ adyacente\ a\ otro\r\n\ \ @param\ peso,\ de\ la\ arista\ que\ une\ a\ v\ y\ a\ otro\ del\ que\ es\ adyacente\ \r\n
comment1.params=
comment1.target=int\ getDestino()
comment1.text=\ Devuelve\ el\ vertice\ adyacente\ a\ otro\ de\ un\ grafo,\ \r\n\ \ o\ el\ vertice\ destino\ de\ la\ arista\ que\ los\ une.\ \r\n\ \ @return\ int,\ Vertice\ adyacente\ a\ otro\ \r\n
comment2.params=
comment2.target=double\ getPeso()
comment2.text=\ Devuelve\ el\ peso\ de\ la\ arista\ que\ une\ \r\n\ \ a\ un\ vertice\ de\ un\ grafo\ a\ un\ adyacente\ a\ este.\ \r\n\ \ @return\ double,\ \r\n\ \ Peso\ de\ la\ arista\ que\ une\ a\ un\ adyacente\ de\ un\ vertice\ de\ un\ grafo,\ \r\n\ \ 1\ si\ el\ grafo\ es\ No\ Ponderado\r\n
comment3.params=
comment3.target=java.lang.String\ toString()
comment3.text=\ Devuelve\ un\ String\ que\ representa\ a\ un\ adyacente\ \r\n\ \ a\ un\ vertice\ de\ un\ grafo\ y\ al\ peso\ de\ la\ arista\ que\ los\ une.\r\n\ \ @return\ String,\ que\ representa\ a\ un\ adyacente\r\n
numComments=4
